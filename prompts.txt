Crie uma aplicação Python que demonstre gerenciamento de memória para agentes, usando Cosmos DB como persistência.

### Objetivo:
- Comparar como Semantic Kernel e Agent Framework resgatam memória persistida.
- Implementar integração com Cosmos DB para armazenar e recuperar contexto.

### Estrutura:
1. **Configuração do ambiente**
   - Instale pacotes:
     - azure-cosmos
     - semantic-kernel
     - agent-framework
     - azure-ai-openai
     - python-dotenv
2. **Passos para Semantic Kernel**
   - Configure armazenamento de memória no Cosmos DB.
   - Salve histórico de conversas.
   - Recupere memória para continuar interação.
3. **Passos para Agent Framework**
   - Configure persistência opcional no Cosmos DB.
   - Salve estado granular (threads).
   - Recupere memória para reconstruir contexto.
4. **Comparativo**
   - Mostre diferença entre persistência baseada em histórico (SK) e granularidade (AF).

### Componentes:
- Funções para conectar ao Cosmos DB.
- Funções para salvar e recuperar memória.
- Logs mostrando operações.

### Saída esperada:
- Código Python comentado.
- Demonstração clara das diferenças.

Formato: Código Python completo, pronto para execução.